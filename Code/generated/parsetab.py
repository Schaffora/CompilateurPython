
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '0AC9249EC904D90CA06BBF310D2BB20C'
    
_lr_action_items = {'LINE':([0,6,],[3,3,]),'ADD_OP':([7,8,9,10,11,16,17,18,],[-8,-7,-9,-10,14,14,-5,-6,]),'MUL_OP':([7,8,9,10,11,16,17,18,],[-8,-7,-9,-10,15,15,15,-6,]),'IDENTIFIER':([0,3,6,12,14,15,],[4,7,4,7,7,7,]),'CHAR':([3,12,14,15,],[10,10,10,10,]),';':([2,5,7,8,9,10,11,16,17,18,],[6,-3,-8,-7,-9,-10,-4,-11,-5,-6,]),'$end':([1,2,5,7,8,9,10,11,13,16,17,18,],[0,-1,-3,-8,-7,-9,-10,-4,-2,-11,-5,-6,]),'MAT':([3,12,14,15,],[9,9,9,9,]),'=':([4,],[12,]),'NUMBER':([3,12,14,15,],[8,8,8,8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programme':([0,6,],[1,13,]),'statement':([0,6,],[2,2,]),'expression':([3,12,14,15,],[11,16,17,18,]),'assignation':([0,6,],[5,5,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parserProjet.py',9),
  ('programme -> statement ; programme','programme',3,'p_programme_recursive','parserProjet.py',13),
  ('statement -> assignation','statement',1,'p_statement','parserProjet.py',17),
  ('statement -> LINE expression','statement',2,'p_statement_line','parserProjet.py',21),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parserProjet.py',25),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parserProjet.py',26),
  ('expression -> NUMBER','expression',1,'p_expression_num_or_var','parserProjet.py',30),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parserProjet.py',31),
  ('expression -> MAT','expression',1,'p_expression_mat','parserProjet.py',35),
  ('expression -> CHAR','expression',1,'p_expression_char','parserProjet.py',39),
  ('assignation -> IDENTIFIER = expression','assignation',3,'p_assign','parserProjet.py',43),
]
